[{"id":1484618996103,"text":"What are the three segments of a program?","answers":[{"text":"Code","isValid":false},{"text":"Data","isValid":false},{"text":" Stack","isValid":false},{"text":"All of the above","isValid":true}],"note":"","type":"MULTIPLE_CHOICE","preserveOrder":true},{"id":1484619258294,"text":"Which of the following statements is incorrect about a heap?","answers":[{"text":"Heap is a memory segment used by a program and is allocated dynamically","isValid":false},{"text":"Heap memory is the same as stack memory","isValid":true},{"text":"Heap stores all instances or attributes, constructors, and methods of a class or object","isValid":false},{"text":"Control data is stored on the heap","isValid":false}],"note":"Heap memory is different from stack memory. Heap memory is persistent between functions, with memory allocated in one function remaining allocated until explicitly freed.","type":"MULTIPLE_CHOICE","preserveOrder":false},{"id":1484619330450,"text":"What is not a step to take in a buffer overflow attack?","answers":[{"text":"Checking if the target application or program is vulnerable","isValid":false},{"text":"Write data into the buffer and it will automatically overwrite the address pointer","isValid":false},{"text":"Identify the location of the stack and the address pointer","isValid":true},{"text":" Control may go to a different location in the program or new code may be executed","isValid":false}],"note":"A. You should check whether the target application or program is vulnerable to buffer overflow or not. Typically buffer overflow occurs when the input entered exceeds the size of the buffer. C. Once you find the location of the vulnerability, write more data into the buffer than it can handle. This causes the buffer overflow. D. If overwrite occurs, the execution flow may change from normal to the shell code. Thus, you can execute anything you want.","type":"MULTIPLE_CHOICE","preserveOrder":false},{"id":1484620906224,"text":"What are the steps to perform for detecting buffer overflow?","answers":[{"text":"Run web server on local machine, then issue requests with long tags—all long tags end with \"$$$$$\"","isValid":false},{"text":"If the web server crashes, search core dump for \"$$$$$\" to find overflow location, using automated tools","isValid":false},{"text":"Use disassemblers and debuggers","isValid":false},{"text":"Use IDA-Pro to construct an exploit","isValid":false},{"text":"All of the above","isValid":true}],"note":"A. In the local machine run the web server, then issue the requests with long tags—all long tags end with “$$$$$”. B. Using automated tools for searching core dump for “$$$$$” to find overflow location when web server crashes. C. To debug uses disassemblers. D. To exploit construct use IDA-Pro.","type":"MULTIPLE_CHOICE","preserveOrder":true},{"id":1484620997792,"text":"What are the ways to detect buffer overflows in a program?","answers":[{"text":"Do a code review","isValid":false},{"text":"Test with various kinds of inputs","isValid":false},{"text":"Use code analyzer tools to identify vulnerabilities","isValid":false},{"text":"All of the above","isValid":true}],"note":"Review the source code and look for known vulnerabilities. Test the code with various types of inputs. Use code analyzer tools to identify vulnerabilities.","type":"MULTIPLE_CHOICE","preserveOrder":true},{"id":1484621113540,"text":"How to protect against buffer overflows?","answers":[{"text":"Manual auditing of code","isValid":false},{"text":"Use appropriate compiler options","isValid":false},{"text":"Use safer C libraries","isValid":false},{"text":"All of the above","isValid":true}],"note":"A. Manual auditing of code will help a lot. You can search for vulnerable functions and replace them with safer functions. Ex. Replace strcpy with strncpy. B. You can use appropriate compiler options to check range checking of indices. This guarantees 100% efficiency from buffer overflow attacks. C. Use safer versions of C library functions.","type":"MULTIPLE_CHOICE","preserveOrder":true},{"id":1484621235629,"text":"How do you prevent buffer overflow attacks?","answers":[{"text":"Implement runtime checking address obfuscation","isValid":false},{"text":"Mark the stack with a randomized location and mark as non executable","isValid":false},{"text":"Use type safe languages","isValid":false},{"text":"All of the above","isValid":true}],"note":"To prevent buffer overflow attacks deploy run time checking address obfuscation. Mark stack as non executable and have a random stack location. Use type safe languages, such as Java.","type":"MULTIPLE_CHOICE","preserveOrder":true},{"id":1484621301621,"text":"Which of the following are programming countermeasures?","answers":[{"text":"Design programs with security in mind","isValid":false},{"text":"Disable stack execution","isValid":false},{"text":"Test and debug the code to find errors. Prevent use of vulnerable functions: gets, strcpy, etc.","isValid":false},{"text":"Use safer compilers like StackGuard","isValid":false},{"text":"All of the above","isValid":true}],"note":"Whenever you write a program, keep security aspects in perspective. Disable stack execution, like in Solaris. To prevent dangerous functions like gets and strcpy, test and debug the code to find the errors. Consider using “safer” compilers such as StackGuard.","type":"MULTIPLE_CHOICE","preserveOrder":true},{"id":1484621349131,"text":"Data Execution Prevention (DEP) is a set of hardware and software technologies that monitors programs.","answers":[{"text":"TRUE","isValid":true},{"text":"FALSE","isValid":false}],"note":"Data execution prevention is a set of hardware and software technologies that monitors programs to verify whether they are using system memory safely and securely. It prevents the applications that may access memory that wasn't assigned for the process and lies in another region. When an execution occurs, hardware-enforced DEP detects code that is running from these locations and raises an exception. To prevent malicious code from taking advantage of exception-handling mechanisms in Windows, use software-enforced DEP. DEP helps in preventing code execution from data pages.","type":"TRUE_FALSE","preserveOrder":false},{"id":1484621446206,"text":"When overflow writes over the return address, what will be overwritten?","answers":[{"text":"A. Function parameters","isValid":false},{"text":"B. Function return address","isValid":false},{"text":"C. Main program data will not be touched","isValid":false},{"text":"D. None of these","isValid":false},{"text":"E. Answers A and B","isValid":true}],"note":"Function parameters will be overwritten when buffer overflow occurs. Function return address will be overwritten when buffer overflow occurs.","type":"MULTIPLE_CHOICE","preserveOrder":true},{"id":1484621546751,"text":"Which of the following statements is correct for buffer overflow penetration testing?","answers":[{"text":"Buffer overflow penetration testing is based on the assumption that the application will result in a system crash","isValid":false},{"text":"A penetration tester's job is not only to scan for the vulnerabilities in the applications","isValid":false},{"text":"A pen tester needs to exploit vulnerabilities to gain access to the remote server","isValid":false},{"text":"All of the above","isValid":true}],"note":"Buffer overflow penetration testing is based on the assumption that the application will result in a system crash or an extraordinary behavior when supplied with format type specifics and input strings that are longer than expected. A penetration tester's job is not only to scan for the vulnerabilities in the applications or server. They also need to exploit them to gain access to the remote server.","type":"MULTIPLE_CHOICE","preserveOrder":true},{"id":1484621675971,"text":"Which statement is incorrect about a good pen tester?","answers":[{"text":"A good pen tester must first understand how buffer overflow attacks work","isValid":false},{"text":"Understand how various operating environments handle memory management","isValid":false},{"text":"A pen tester should understand program languages","isValid":false},{"text":"Pen testers do not need to exploit vulnerabilities to gain access to the server","isValid":true}],"note":"Pen testers need to exploit vulnerabilities to gain access to the remote server.","type":"MULTIPLE_CHOICE","preserveOrder":false},{"id":1484621947039,"text":"Why are programs and applications vulnerable to buffer overflows?","answers":[{"text":"Pressure on the delivery team to deliver on time, even at the cost of not adhering to best programming practices","isValid":false},{"text":"Programmers still use languages/libraries that have inherent vulnerabilities","isValid":false},{"text":"Boundary checking is not done or it is skipped in many of the cases","isValid":false},{"text":"All of the above","isValid":true}],"note":"A. Pressure on delivery teams to deliver on time continues to there. Programmers tend to get the work done somehow and may not give sufficient thought designing and coding in a secure way. B. Programming languages (such as C) that programmers use to develop packages or applications contain vulnerabilities. D. Boundary checking is not done or is skipped in many case","type":"MULTIPLE_CHOICE","preserveOrder":true},{"id":1484622032721,"text":"Which of the following statements are correct for attacking real program?","answers":[{"text":"Assuming that a string function can be exploited, the attacker can send a long string as the input","isValid":false},{"text":"The return pointer of the function is overwritten","isValid":false},{"text":"If the attacker inserts code as input, they have to know the exact address and size of the stack","isValid":false},{"text":"All of the above","isValid":true}],"note":"A. Assuming that a string function is exploited, the attacker can send a long string as the input. This string overflows the buffer and causes a segmentation error. B. The return pointer of the function is overwritten, and the attacker succeeds in altering the flow of the execution. C. If the attacker inserts code as input, he has to know the exact address and size of the stack and make the return pointer point to the code for execution.","type":"MULTIPLE_CHOICE","preserveOrder":true},{"id":1484622110769,"text":"Which of the following statements is incorrect about BufferShield?","answers":[{"text":"It detects code execution on the stack","isValid":false},{"text":"It can terminate applications","isValid":false},{"text":"It allows the definition of a protection scope to either protect or define","isValid":false},{"text":"BufferShield does not utilize Intel XD/AMD NX hardware-based technology","isValid":true}],"note":"Buffershield is utilizes Intel XD/AMD NX hardware-based technology if available.","type":"MULTIPLE_CHOICE","preserveOrder":false}]